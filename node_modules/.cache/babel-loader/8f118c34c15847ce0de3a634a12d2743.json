{"ast":null,"code":"var _jsxFileName = \"/Users/nnannaforever/to-do-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoItem from \"./components/TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]); //set to an empty array because it will be an array of todos\n\n  const addTodo = text => {\n    let id = 1; // first todo\n\n    if (todos.length > 0) {\n      id = todos[0].id + 1;\n    }\n\n    let todo = {\n      id: id,\n      // set the id to the id that was just created \n      text: text,\n      //text set to text that is passed in from the user input \n      completed: false\n    };\n    let newTodos = [todo, ...todos];\n    console.log(newTodos);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        removeTodo: removeTodo,\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoForm","TodoItem","App","todos","setTodos","addTodo","text","id","length","todo","completed","newTodos","console","log","map","removeTodo"],"sources":["/Users/nnannaforever/to-do-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport  TodoItem from \"./components/TodoItem\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]); //set to an empty array because it will be an array of todos\n\n  const addTodo = (text) => {\n    let id = 1; // first todo\n    if(todos.length > 0) {\n      id = todos[0].id + 1\n    }\n    let todo = {\n      id: id, // set the id to the id that was just created \n      text: text, //text set to text that is passed in from the user input \n      completed: false\n    }\n    let newTodos = [todo, ...todos]\n    console.log(newTodos)\n    setTodos(newTodos)\n  };\n\n  return (\n    <div className=\"todo-app\">\n      <h1>To Do List</h1>\n      <TodoForm addTodo={addTodo} />\n      {todos.map((todo) => {\n        return (\n          <TodoItem  removeTodo={removeTodo} todo={todo} key={todo.id}/> \n        )\n      })}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAQC,QAAR,MAAsB,uBAAtB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADa,CAC2B;;EAExC,MAAMM,OAAO,GAAIC,IAAD,IAAU;IACxB,IAAIC,EAAE,GAAG,CAAT,CADwB,CACZ;;IACZ,IAAGJ,KAAK,CAACK,MAAN,GAAe,CAAlB,EAAqB;MACnBD,EAAE,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASI,EAAT,GAAc,CAAnB;IACD;;IACD,IAAIE,IAAI,GAAG;MACTF,EAAE,EAAEA,EADK;MACD;MACRD,IAAI,EAAEA,IAFG;MAEG;MACZI,SAAS,EAAE;IAHF,CAAX;IAKA,IAAIC,QAAQ,GAAG,CAACF,IAAD,EAAO,GAAGN,KAAV,CAAf;IACAS,OAAO,CAACC,GAAR,CAAYF,QAAZ;IACAP,QAAQ,CAACO,QAAD,CAAR;EACD,CAbD;;EAeA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,OAAO,EAAEN;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGF,KAAK,CAACW,GAAN,CAAWL,IAAD,IAAU;MACnB,oBACE,QAAC,QAAD;QAAW,UAAU,EAAEM,UAAvB;QAAmC,IAAI,EAAEN;MAAzC,GAAoDA,IAAI,CAACF,EAAzD;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJA,CAHH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA9BQL,G;;KAAAA,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}