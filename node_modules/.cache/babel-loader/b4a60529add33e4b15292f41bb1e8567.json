{"ast":null,"code":"var _jsxFileName = \"/Users/nnannaforever/to-do-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // imports react and useState from react \n\nimport \"./App.css\"; // imports the custom css stylesheet\n\nimport TodoForm from \"./components/TodoForm\"; // todoform component\n\nimport TodoItem from \"./components/TodoItem\"; // todoitem component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // function app is rendered to the screen via index.js\n  const [todos, setTodos] = useState([]); //set to an empty array because it will be an array of todos\n\n  const addTodo = text => {\n    let id = 1; // first todo\n\n    if (todos.length > 0) {\n      id = todos[0].id + 1;\n    }\n\n    let todo = {\n      id: id,\n      // set the id to the id that was just created \n      text: text,\n      //text set to text that is passed in from the user input \n      completed: false\n    };\n    let newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    let updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"seperator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        removeTodo: removeTodo,\n        completeTodo: completeTodo,\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoForm","TodoItem","App","todos","setTodos","addTodo","text","id","length","todo","completed","newTodos","removeTodo","updatedTodos","filter","completeTodo","map"],"sources":["/Users/nnannaforever/to-do-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\"; // imports react and useState from react \nimport \"./App.css\"; // imports the custom css stylesheet\nimport TodoForm from \"./components/TodoForm\"; // todoform component\nimport  TodoItem from \"./components/TodoItem\"; // todoitem component\n\nfunction App() { // function app is rendered to the screen via index.js\n  const [todos, setTodos] = useState([]); //set to an empty array because it will be an array of todos\n\n  const addTodo = (text) => {\n    let id = 1; // first todo\n    if(todos.length > 0) {\n      id = todos[0].id + 1\n    }\n    let todo = {\n      id: id, // set the id to the id that was just created \n      text: text, //text set to text that is passed in from the user input \n      completed: false\n    }\n    let newTodos = [todo, ...todos]\n    setTodos(newTodos)\n  };\n\n  const removeTodo = (id) => {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id )\n    setTodos(updatedTodos);\n  }\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => { \n      if(todo.id === id) {\n        todo.completed =  !todo.completed;\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n\n  return (\n    <div className=\"todo-app\">\n      <h1>To Do List</h1>\n      <TodoForm addTodo={addTodo} />\n      <hr className=\"seperator\"/>\n      {todos.map((todo) => {\n        return (\n          <TodoItem  removeTodo={removeTodo} completeTodo={completeTodo} todo={todo} key={todo.id}/> \n        )\n      })}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAAyC;;AACzC,OAAO,WAAP,C,CAAoB;;AACpB,OAAOC,QAAP,MAAqB,uBAArB,C,CAA8C;;AAC9C,OAAQC,QAAR,MAAsB,uBAAtB,C,CAA+C;;;;AAE/C,SAASC,GAAT,GAAe;EAAA;;EAAE;EACf,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADa,CAC2B;;EAExC,MAAMM,OAAO,GAAIC,IAAD,IAAU;IACxB,IAAIC,EAAE,GAAG,CAAT,CADwB,CACZ;;IACZ,IAAGJ,KAAK,CAACK,MAAN,GAAe,CAAlB,EAAqB;MACnBD,EAAE,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASI,EAAT,GAAc,CAAnB;IACD;;IACD,IAAIE,IAAI,GAAG;MACTF,EAAE,EAAEA,EADK;MACD;MACRD,IAAI,EAAEA,IAFG;MAEG;MACZI,SAAS,EAAE;IAHF,CAAX;IAKA,IAAIC,QAAQ,GAAG,CAACF,IAAD,EAAO,GAAGN,KAAV,CAAf;IACAC,QAAQ,CAACO,QAAD,CAAR;EACD,CAZD;;EAcA,MAAMC,UAAU,GAAIL,EAAD,IAAQ;IACzB,IAAIM,YAAY,GAAG,CAAC,GAAGV,KAAJ,EAAWW,MAAX,CAAmBL,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAxC,CAAnB;IACAH,QAAQ,CAACS,YAAD,CAAR;EACD,CAHD;;EAKA,MAAME,YAAY,GAAIR,EAAD,IAAQ;IAC3B,IAAIM,YAAY,GAAGV,KAAK,CAACa,GAAN,CAAWP,IAAD,IAAU;MACrC,IAAGA,IAAI,CAACF,EAAL,KAAYA,EAAf,EAAmB;QACjBE,IAAI,CAACC,SAAL,GAAkB,CAACD,IAAI,CAACC,SAAxB;MACD;;MACD,OAAOD,IAAP;IACD,CALkB,CAAnB;IAMAL,QAAQ,CAACS,YAAD,CAAR;EACD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,OAAO,EAAER;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAHF,EAIGF,KAAK,CAACa,GAAN,CAAWP,IAAD,IAAU;MACnB,oBACE,QAAC,QAAD;QAAW,UAAU,EAAEG,UAAvB;QAAmC,YAAY,EAAEG,YAAjD;QAA+D,IAAI,EAAEN;MAArE,GAAgFA,IAAI,CAACF,EAArF;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJA,CAJH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GA7CQL,G;;KAAAA,G;AA+CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}